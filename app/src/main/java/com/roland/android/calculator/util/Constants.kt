package com.roland.android.calculator.util

object Constants {
    const val THEME = "theme"
    const val DEG_RAD = "rad_deg"
    const val HAPTIC = "haptic_feedback"
    const val COMPUTE_FORMAT = "compute_format"
    const val SAVE_HISTORY = "save_history"
    const val SAVE_ERROR = "save_error"
    const val NAVIGATE = "navigate"
    const val SET_THEME = "set_theme"
    const val HISTORY = "history_equation"
    const val PATTERN = "MMMM d"
    const val FULL_PATTERN = "MMMM d, YYYY"
    const val YEAR = "YYYY"
    const val STARTING_PAGE = 0
    const val LOAD_PAGE_SIZE = 30

    const val ADD = "+"
    const val MINUS = "−"
    const val DIVIDE = "÷"
    const val MULTIPLY = "×"
    const val MOD = "%"
    const val SIN = "sin("
    const val COS = "cos("
    const val TAN = "tan("
    const val SINR = "sinr("
    const val COSR = "cosr("
    const val TANR = "tanr("
    const val SIN_INV = "sin⁻¹("
    const val COS_INV = "cos⁻¹("
    const val TAN_INV = "tan⁻¹("
    const val ASIN = "asin("
    const val ACOS = "acos("
    const val ATAN = "atan("
    const val ASINR = "asinr("
    const val ACOSR = "acosr("
    const val ATANR = "atanr("
    const val LOG = "log("
    const val INV_LOG = "10^"
    const val LOG_N = "ln("
    const val PI = "π"
    const val DOT = "."
    const val ROOT = "√("
    const val SQUARE = "^"
    const val SQUARED = "²"
    const val DEG = "DEG"
    const val RAD = "RAD"
    const val EULER = "e"
    const val EULER_INV = "e^"
    const val FACT = "fact("

    /** error messages **/
    const val UNKNOWN = "Syntax error"
    const val CANT_DIVIDE = "Can't divide by 0"
    const val FORMAT_ERROR = "Format error"
    const val MISMATCHED = "Mismatched parentheses"
    const val CANT_CALC = "Value too large"
    const val DOMAIN_ERROR = "Domain error"
    const val NEG_SQRT = "Can't calculate"
    const val UNDEFINED = "Wetin you go type?"
    // initial error messages
    const val UNKNOWN_UNARY = "Unknown unary operator"
    const val UNKNOWN_OPERATOR = "Unknown operator"
    const val DIVIDE_0 = "Division by zero"
    const val MISSING_PARAM = "Missing parameter(s) for operator"
    const val MISMATCHED_PAR = "Mismatched parentheses"
    const val ROUNDING_NEC = "Rounding necessary"
    const val INFINITY = "Infinity or NaN: "
    const val NEGATIVE_SQRT = "Argument to SQRT() function must not be negative"
}